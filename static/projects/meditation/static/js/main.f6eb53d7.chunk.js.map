{"version":3,"sources":["components/Switch.module.scss","components/Range.module.scss","components/Timer.module.scss","components/Btn.module.scss","components/Nav.module.scss","context/AppContext.js","components/Btn.js","components/Timer.js","containers/TimerContainer.js","components/Range.js","components/Switch.js","containers/SettingsContainer.js","components/Nav.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AppContext","React","createContext","isBellOn","changeBellStatus","appTime","changeAppTime","bellInterval","changeBellInterval","Btn","title","clickHandler","icon","className","styles","btn","onClick","defaultProps","Timer","time","minutes","Math","floor","seconds","slice","timer","TimerContainer","context","useContext","appTimeRef","useRef","Number","bellIntervalRef","isBellOnRef","timerInterval","bellSound","Audio","useState","isOn","changeStatus","changeTime","bellTime","changeBellTime","resetTimer","current","playBell","play","useEffect","setInterval","prevState","clearInterval","navigator","vibrate","Range","name","label","max","value","changeHandler","range","htmlFor","id","slider","type","min","step","onChange","event","target","Switch","classes","switch","push","switchChecked","join","tabIndex","onKeyPress","key","switchBody","input","checked","SettingsContainer","Nav","activeSection","navData","nav","App","activeSectionMarkup","loadedSettings","JSON","parse","localStorage","getItem","initialSettings","changeActiveSection","setItem","stringify","newSettings","Provider","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f6eb53d7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"switch\":\"Switch_switch__3kjH9\",\"switchBody\":\"Switch_switchBody__Tm6e2\",\"input\":\"Switch_input__rGcFK\",\"switchChecked\":\"Switch_switchChecked__HSz9X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"Range_range__QVs4y\",\"label\":\"Range_label__2mw6V\",\"slider\":\"Range_slider__Y-j6C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timer\":\"Timer_timer__O1fZ4\",\"time\":\"Timer_time__Elhw0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Btn_btn__1Wy3s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__2FSag\"};","import React from \"react\";\r\n\r\nconst AppContext = React.createContext({\r\n\tisBellOn: true,\r\n\tchangeBellStatus: () => {},\r\n\tappTime: 0,\r\n\tchangeAppTime: () => {},\r\n\tbellInterval: 0,\r\n\tchangeBellInterval: () => {}\r\n});\r\n\r\nexport default AppContext;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Btn.module.scss\";\r\n\r\nconst Btn = ({ title, clickHandler, icon }) => {\r\n\treturn (\r\n\t\t<button title={title} className={styles.btn} onClick={clickHandler}>\r\n\t\t\t{icon}\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nBtn.propTypes = {\r\n\ttitle: PropTypes.string,\r\n\tclickHandler: PropTypes.func.isRequired,\r\n\ticon: PropTypes.object.isRequired\r\n};\r\n\r\nBtn.defaultProps = {\r\n\ttitle: \"\"\r\n};\r\n\r\nexport default Btn;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Timer.module.scss\";\r\n\r\nconst Timer = ({ time }) => {\r\n\tconst minutes = Math.floor(time / 60);\r\n\tconst seconds = (\"0\" + time % 60).slice(-2);\r\n\r\n\treturn (\r\n\t\t<div className={styles.timer}>\r\n\t\t\t<span className={styles.time}>\r\n\t\t\t\t{minutes}:{seconds}\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nTimer.propTypes = {\r\n\ttime: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Timer;\r\n","import React, { useContext, useState, useEffect, useRef } from \"react\";\r\nimport { FaHistory, FaPlay, FaPause } from \"react-icons/fa\";\r\n\r\nimport AppContext from \"../context/AppContext\";\r\nimport Btn from \"../components/Btn\";\r\nimport Timer from \"../components/Timer\";\r\n\r\nconst TimerContainer = () => {\r\n\tconst context = useContext(AppContext);\r\n\r\n\tconst appTimeRef = useRef(Number(context.appTime));\r\n\tconst bellIntervalRef = useRef(Number(context.bellInterval));\r\n\tconst isBellOnRef = useRef(context.isBellOn);\r\n\r\n\tconst timerInterval = useRef();\r\n\tconst bellSound = useRef(new Audio(\"./bell.mp3\"));\r\n\r\n\tconst [ isOn, changeStatus ] = useState(false);\r\n\tconst [ time, changeTime ] = useState(context.appTime * 60);\r\n\tconst [ bellTime, changeBellTime ] = useState(context.bellInterval * 60);\r\n\r\n\tconst resetTimer = () => {\r\n\t\tchangeStatus(false);\r\n\t\tchangeTime(appTimeRef.current * 60);\r\n\t\tchangeBellTime(bellIntervalRef.current * 60);\r\n\t};\r\n\r\n\tconst initTimerInterval = () => {\r\n\t\treturn setInterval(() => {\r\n\t\t\tchangeTime((prevState) => prevState - 1);\r\n\t\t\tchangeBellTime((prevState) => prevState - 1);\r\n\t\t}, 1000);\r\n\t};\r\n\r\n\tconst playBell = () => {\r\n\t\tbellSound.current.play();\r\n\t};\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (isOn) {\r\n\t\t\t\ttimerInterval.current = initTimerInterval();\r\n\t\t\t} else {\r\n\t\t\t\tclearInterval(timerInterval.current);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[ isOn ]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (time === 0) {\r\n\t\t\t\tresetTimer();\r\n\t\t\t\tnavigator.vibrate([ 500, 250, 500 ]);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[ time ]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (bellTime === 0) {\r\n\t\t\t\tchangeBellTime(bellIntervalRef.current * 60);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[ bellTime ]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (time === 0) {\r\n\t\t\t\tplayBell();\r\n\t\t\t}\r\n\r\n\t\t\tif (bellTime === 0 && isBellOnRef.current) {\r\n\t\t\t\tplayBell();\r\n\t\t\t}\r\n\t\t},\r\n\t\t[ time, bellTime ]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<section className=\"timer\">\r\n\t\t\t<Btn title=\"Reset\" clickHandler={resetTimer} icon={<FaHistory />} />\r\n\t\t\t<Timer time={time} />\r\n\t\t\t{isOn ? (\r\n\t\t\t\t<Btn title=\"Pause\" clickHandler={() => changeStatus(false)} icon={<FaPause />} />\r\n\t\t\t) : (\r\n\t\t\t\t<Btn title=\"Start\" clickHandler={() => changeStatus(true)} icon={<FaPlay />} />\r\n\t\t\t)}\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default TimerContainer;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Range.module.scss\";\r\n\r\nconst Range = ({ name, label, max, value, changeHandler }) => {\r\n\treturn (\r\n\t\t<div className={styles.range}>\r\n\t\t\t<label className={styles.label} htmlFor={name}>\r\n\t\t\t\t<span>{label}</span>\r\n\t\t\t\t<span>{`${value} ${value > 1 ? \"minutes\" : \"minute\"}`}</span>\r\n\t\t\t</label>\r\n\t\t\t<input\r\n\t\t\t\tid={name}\r\n\t\t\t\tclassName={styles.slider}\r\n\t\t\t\ttitle={`Change ${label}`}\r\n\t\t\t\ttype=\"range\"\r\n\t\t\t\tmin=\"1\"\r\n\t\t\t\tmax={max}\r\n\t\t\t\tstep=\"1\"\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tonChange={(event) => changeHandler(event.target.value)}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nRange.propTypes = {\r\n\tname: PropTypes.string.isRequired,\r\n\tlabel: PropTypes.string,\r\n\tmax: PropTypes.string,\r\n\tvalue: PropTypes.string.isRequired,\r\n\tchangeHandler: PropTypes.func.isRequired\r\n};\r\n\r\nRange.defaultProps = {\r\n\tlabel: \"\",\r\n\tmax: 60\r\n};\r\n\r\nexport default Range;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Switch.module.scss\";\r\n\r\nconst Switch = ({ name, label, value, changeHandler }) => {\r\n\tconst classes = [ `${styles.switch}` ];\r\n\r\n\tif (value) {\r\n\t\tclasses.push(`${styles.switchChecked}`);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.join(\" \")}>\r\n\t\t\t<span className={styles.label}>{`${label} ${value ? \"On\" : \"Off\"}`}</span>\r\n\t\t\t<label\r\n\t\t\t\ttabIndex=\"0\"\r\n\t\t\t\tonKeyPress={(event) => {\r\n\t\t\t\t\tif (event.key === \"Enter\") {\r\n\t\t\t\t\t\tchangeHandler(!value);\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t\ttitle={value ? \"Turn Off\" : \"Turn On\"}\r\n\t\t\t\thtmlFor={name}\r\n\t\t\t\tclassName={styles.switchBody}\r\n\t\t\t/>\r\n\t\t\t<input\r\n\t\t\t\tid={name}\r\n\t\t\t\tclassName={styles.input}\r\n\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\tchecked={value}\r\n\t\t\t\tonChange={(event) => changeHandler(event.target.checked)}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nSwitch.propTypes = {\r\n\tname: PropTypes.string.isRequired,\r\n\tlabel: PropTypes.string,\r\n\tvalue: PropTypes.bool.isRequired,\r\n\tchangeHandler: PropTypes.func.isRequired\r\n};\r\n\r\nSwitch.defaultProps = {\r\n\tlabel: \"\"\r\n};\r\n\r\nexport default Switch;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport AppContext from \"../context/AppContext\";\r\nimport Range from \"../components/Range\";\r\nimport Switch from \"../components/Switch\";\r\n\r\nconst SettingsContainer = () => {\r\n\tconst context = useContext(AppContext);\r\n\r\n\treturn (\r\n\t\t<section className=\"settings\">\r\n\t\t\t<Range\r\n\t\t\t\tname=\"appTime\"\r\n\t\t\t\tlabel=\"Meditation time\"\r\n\t\t\t\tvalue={context.appTime}\r\n\t\t\t\tchangeHandler={context.changeAppTime}\r\n\t\t\t/>\r\n\t\t\t<Switch name=\"bellStatus\" label=\"Bell:\" value={context.isBellOn} changeHandler={context.changeBellStatus} />\r\n\t\t\t{context.isBellOn ? (\r\n\t\t\t\t<Range\r\n\t\t\t\t\tname=\"bellInterval\"\r\n\t\t\t\t\tlabel=\"Bell interval\"\r\n\t\t\t\t\tmax={context.appTime}\r\n\t\t\t\t\tvalue={context.bellInterval}\r\n\t\t\t\t\tchangeHandler={context.changeBellInterval}\r\n\t\t\t\t/>\r\n\t\t\t) : null}\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default SettingsContainer;\r\n","import React from \"react\";\r\nimport { FaCog, FaRegClock } from \"react-icons/fa\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Nav.module.scss\";\r\n\r\nimport Btn from \"./Btn\";\r\n\r\nconst Nav = ({ activeSection, clickHandler }) => {\r\n\tconst navData = activeSection === \"Timer\" ? [ \"Settings\", <FaCog /> ] : [ \"Timer\", <FaRegClock /> ];\r\n\r\n\treturn (\r\n\t\t<nav className={styles.nav}>\r\n\t\t\t<Btn\r\n\t\t\t\ttitle={navData[0]}\r\n\t\t\t\ticon={navData[1]}\r\n\t\t\t\tclickHandler={() => {\r\n\t\t\t\t\tclickHandler(navData[0]);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</nav>\r\n\t);\r\n};\r\n\r\nNav.propTypes = {\r\n\tactiveSection: PropTypes.string.isRequired,\r\n\tclickHandler: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Nav;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport AppContext from \"./context/AppContext\";\r\nimport TimerContainer from \"./containers/TimerContainer\";\r\nimport SettingsContainer from \"./containers/SettingsContainer\";\r\nimport Nav from \"./components/Nav\";\r\n\r\nfunction App() {\r\n\tconst loadedSettings = JSON.parse(localStorage.getItem(\"meditationAppSettings\"));\r\n\r\n\tconst initialSettings = {\r\n\t\tappTime: loadedSettings ? loadedSettings.appTime : \"15\",\r\n\t\tisBellOn: loadedSettings ? loadedSettings.isBellOn : true,\r\n\t\tbellInterval: loadedSettings ? loadedSettings.bellInterval : \"1\"\r\n\t};\r\n\r\n\tconst [ activeSection, changeActiveSection ] = useState(\"Timer\");\r\n\tconst [ isBellOn, changeBellStatus ] = useState(initialSettings.isBellOn);\r\n\tconst [ appTime, changeAppTime ] = useState(initialSettings.appTime);\r\n\tconst [ bellInterval, changeBellInterval ] = useState(initialSettings.bellInterval);\r\n\r\n\tlet activeSectionMarkup;\r\n\r\n\tif (activeSection === \"Timer\") {\r\n\t\tactiveSectionMarkup = <TimerContainer />;\r\n\t} else {\r\n\t\tactiveSectionMarkup = <SettingsContainer />;\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (localStorage.getItem(\"meditationAppSettings\") === null) {\r\n\t\t\tlocalStorage.setItem(\"meditationAppSettings\", JSON.stringify(initialSettings));\r\n\t\t}\r\n\t});\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tconst newSettings = {\r\n\t\t\t\tappTime: appTime,\r\n\t\t\t\tisBellOn: isBellOn,\r\n\t\t\t\tbellInterval: bellInterval\r\n\t\t\t};\r\n\r\n\t\t\tlocalStorage.setItem(\"meditationAppSettings\", JSON.stringify(newSettings));\r\n\t\t},\r\n\t\t[ appTime, isBellOn, bellInterval ]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<AppContext.Provider\r\n\t\t\t\tvalue={{\r\n\t\t\t\t\tisBellOn: isBellOn,\r\n\t\t\t\t\tchangeBellStatus: changeBellStatus,\r\n\t\t\t\t\tappTime: appTime,\r\n\t\t\t\t\tchangeAppTime: changeAppTime,\r\n\t\t\t\t\tbellInterval: bellInterval,\r\n\t\t\t\t\tchangeBellInterval: changeBellInterval\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<main className=\"main\">{activeSectionMarkup}</main>\r\n\t\t\t</AppContext.Provider>\r\n\t\t\t<Nav activeSection={activeSection} clickHandler={changeActiveSection} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles/global.scss\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}